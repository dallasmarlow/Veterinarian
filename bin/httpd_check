#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
require 'optparse'

$:.unshift File.join File.dirname(__FILE__), *%w[.. lib]
require 'checknotify'

#class DistChecker

def get_config
  options = {}
  optparse = OptionParser.new do |opts|
    opts.banner = "Usage: #{ARGV[0]} [options]"
    opts.on("-c", "--config [file]", "path to config (required)") do |c|
      options[:config_file] = c
    end
  end
  optparse.parse!
  if not options[:config_file]
    puts optparse
    exit
  end

  YAML.load_file(options[:config_file])
end

# Parse config
config = get_config

# Setup logger
if config.key? 'log_file'
  log = Logger.new(config['log_file'])
else
  log = Logger.new(STDOUT)
end

# Notification: Initialize zookeeper client
zk_notify = ZkNode.new(connect_string=config['ZkNode']['connect_string'],
                        parent_dir=config['ZkNode']['parent_dir'],
                        logger=log)

# Check: Initialize http check             
httpd_chk = HttpCheck.new( ip=config['ip'], 
                            port=config['HttpCheck']['port'], 
                            uri=config['HttpCheck']['uri'], 
                            hostname=config['hostname'], 
                            logger=log)

cn = CheckNotify.new(logger=log)
cn.new_check=httpd_chk
cn.new_notification=zk_notify

while true
  cn.check_status(config['ip'], config['hostname'])
  sleep config['CHECK_INTERVAL']
end

